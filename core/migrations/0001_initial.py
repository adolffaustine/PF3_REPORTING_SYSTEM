# Generated by Django 5.2.1 on 2025-06-06 04:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PoliceStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('location_details', models.TextField(blank=True, null=True, verbose_name='Location/Address Details')),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=255)),
                ('team_description', models.TextField(blank=True, null=True)),
                ('on_call', models.BooleanField(default=False)),
                ('shift_date', models.DateTimeField(blank=True, null=True)),
                ('shift_end_date', models.DateTimeField(blank=True, null=True)),
                ('leader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_leader', to='accounts.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urgency', models.IntegerField(choices=[(0, 'Low'), (1, 'Medium'), (2, 'High')], default=0)),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted by Victim/Other'), ('PENDING_DOCTOR', 'Pending Doctor Approval'), ('PENDING_POLICE', 'Pending Police Acknowledgement'), ('ACKNOWLEDGED_POLICE', 'Acknowledged by Police'), ('REJECTED_DOCTOR', 'Rejected by Doctor'), ('REJECTED_POLICE', 'Rejected by Police'), ('RESOLVED', 'Resolved')], default='SUBMITTED', max_length=20)),
                ('triggered', models.BooleanField(default=False)),
                ('case_file_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Case File No.')),
                ('resolved', models.BooleanField(default=False)),
                ('Incident_Type', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=500)),
                ('Name_of_Patient', models.CharField(max_length=255)),
                ('Date_of_Accident', models.DateTimeField(blank=True, null=True)),
                ('Date_of_Admission', models.DateTimeField(blank=True, null=True)),
                ('doctor_approval_date', models.DateTimeField(blank=True, null=True)),
                ('doctor_comments', models.TextField(blank=True, null=True)),
                ('police_acknowledgement_date', models.DateTimeField(blank=True, null=True)),
                ('police_comments', models.TextField(blank=True, null=True)),
                ('contact_details_for_hospital', models.TextField(blank=True, null=True, verbose_name='Contact Details for Hospital (from Police)')),
                ('contact_details_for_police', models.TextField(blank=True, null=True, verbose_name='Contact Details for Police (from Hospital/Doctor)')),
                ('patient_file_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Patient File No.')),
                ('nature_of_complaint', models.TextField(blank=True, null=True, verbose_name='Nature of Complaint')),
                ('estimated_age', models.CharField(blank=True, max_length=50, null=True, verbose_name='Estimated Age')),
                ('general_physical_mental_examination', models.TextField(blank=True, null=True, verbose_name='General Physical/Mental Examination')),
                ('medical_history', models.TextField(blank=True, null=True, verbose_name='Medical History')),
                ('condition_appearance_of_clothes', models.TextField(blank=True, null=True, verbose_name='Condition/Appearance of Clothes (blood, tears, fluids, etc.)')),
                ('guardian_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of Guardian')),
                ('guardian_relationship', models.CharField(blank=True, max_length=100, null=True, verbose_name='Relationship of Guardian')),
                ('approx_age_of_injury', models.CharField(blank=True, max_length=100, null=True, verbose_name='Approximately Age of Injury')),
                ('treatment_received', models.TextField(blank=True, null=True, verbose_name='Treatment if Received Any')),
                ('description_of_site_situation_depth_of_injury', models.TextField(blank=True, null=True, verbose_name='Description of Site, Situation and Depth of Injury Sustained')),
                ('type_of_weapon_or_object_used', models.CharField(blank=True, max_length=255, null=True, verbose_name='Type of Weapon or Object Used')),
                ('immediate_degree_of_injury', models.CharField(blank=True, choices=[('HARM', 'Harm'), ('LESS_HARM', 'Less Harm'), ('GRIEVOUS_HARM', 'Grievous Harm')], max_length=20, null=True, verbose_name='Immediate Degree of Injury')),
                ('details_of_specimen_collected', models.TextField(blank=True, null=True, verbose_name='Details of Specimen Collected')),
                ('sa_nature_of_complaint', models.TextField(blank=True, null=True, verbose_name='(i) Nature of Complaint')),
                ('sa_estimated_age', models.CharField(blank=True, max_length=50, null=True, verbose_name='(ii) Estimated Age of Person Examined')),
                ('sa_female_genitalia_injuries', models.TextField(blank=True, null=True, verbose_name='(i) Physical State/Injuries to Genitalia (Labia Majora/Minora, Vagina, Cervix, Anus, Penetration)')),
                ('sa_female_infections_discharge_blood', models.TextField(blank=True, null=True, verbose_name='(ii) Venereal Infections, Discharge, Blood (Genitalia/Anus)')),
                ('sa_female_specimens_collected', models.TextField(blank=True, null=True, verbose_name='(iii) Details of Specimen/Smears Collected (Pubic Hairs, Blood)')),
                ('sa_male_genitalia_injuries', models.TextField(blank=True, null=True, verbose_name='(i) Physical State/Injuries to Genitalia (Anus, Penetration for Anal Intercourse)')),
                ('sa_male_infections_discharge_blood', models.TextField(blank=True, null=True, verbose_name='(ii) Venereal Infections, Discharge (Anus/Penis)')),
                ('sa_male_specimens_collected', models.TextField(blank=True, null=True, verbose_name='(iii) Details of Specimen/Smears Collected (Pubic Hair, Blood)')),
                ('sa_practitioner_remarks', models.TextField(blank=True, null=True, verbose_name='Medical Practitioner Remarks')),
                ('sa_practitioner_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Practitioner Name')),
                ('sa_practitioner_qualification', models.CharField(blank=True, max_length=255, null=True, verbose_name='Practitioner Qualification')),
                ('sa_practitioner_reg_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Practitioner Registration Number')),
                ('sa_practitioner_date', models.DateField(blank=True, null=True, verbose_name='Practitioner Signature Date')),
                ('sa_official_stamp_details', models.CharField(blank=True, max_length=255, null=True, verbose_name="Official Stamp Details (e.g., 'Stamped')")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_police_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_cases', to='accounts.profile', verbose_name='Assigned Police Officer')),
                ('doctor_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor_approved_incidents', to='accounts.profile')),
                ('hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidents_at_hospital', to='accounts.hospital')),
                ('police_acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='police_acknowledged_incidents', to='accounts.profile')),
                ('reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reported_incidents', to='accounts.profile')),
                ('police_station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.policestation', verbose_name='Police Station')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_incidents', to='core.team')),
            ],
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_of', to='accounts.profile')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='core.team')),
            ],
        ),
    ]
